.table {
    width: 100%;
    max-width: 100%;
    margin-bottom: $spacer;
    background-color: $table-background;

    th,
    td {
        padding: $table-cell-padding;
        vertical-align: top;
        border-top: $table-border-width solid $table-border-color;
    }

    thead th {
        vertical-align: bottom;
        border-bottom: (2 * $table-border-width) solid $table-border-color;
    }

    tbody + tbody {
        border-top: (2 * $table-border-width) solid $table-border-color;
    }

    .table {
        background-color: $body-background;
    }
}

.table-bordered {
    border: $table-border-width solid $table-border-color;

    th,
    td {
        border: $table-border-width solid $table-border-color;
    }

    thead {
        th,
        td {
            border-bottom-width: (2 * $table-border-width);
        }
    }
}

.table-borderless {
    th,
    td,
    thead th,
    tbody + tbody {
        border: 0;
    }
}

.table-striped {
    tbody tr:nth-of-type(#{$table-striped-order}) {
        background-color: $table-accent-background;
    }
}

.table-hover {
    tbody tr {
        @include hover {
            background-color: $table-hover-background;
        }
    }
}

.table {
    .thead-dark {
        th {
            color: $table-dark-color;
            background-color: $table-dark-background;
            border-color: $table-dark-border-color;
        }
    }

    .thead-light {
        th {
            color: $table-head-color;
            background-color: $table-head-background;
            border-color: $table-border-color;
        }
    }
}

.table-dark {
    color: $table-dark-color;
    background-color: $table-dark-background;

    th,
    td,
    thead th {
        border-color: $table-dark-border-color;
    }

    &.table-bordered {
        border: 0;
    }

    &.table-striped {
        tbody tr:nth-of-type(odd) {
            background-color: $table-dark-accent-background;
        }
    }

    &.table-hover {
        tbody tr {
            @include hover {
                background-color: $table-dark-hover-background;
            }
        }
    }
}

@each $color, $value in $theme-colors {
  @include table-row-variant($color, theme-color-level($color, -9));
}

@include table-row-variant(active, $table-active-background);

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        -ms-overflow-style: -ms-autohiding-scrollbar; 

        > .table-bordered {
          border: 0;
        }
      }
    }
  }
}